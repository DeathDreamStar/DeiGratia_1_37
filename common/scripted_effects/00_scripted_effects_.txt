#Unsorted Scripted effects:

#General effect for extending or adding province modifier
#Province Scope
add_or_extend_province_modifier_effect = {
	if = {
		limit = {
			has_province_modifier = $MODIFIER$
		}
		extend_province_modifier = { name = $MODIFIER$ duration = $DURATION$ }
	}
	else = {
		add_province_modifier = { name = $MODIFIER$ duration = $DURATION$ }
	}
}

#Used in army professionalism event:
#used where FROM is a province and ROOT is a country, ie onaction for provinces fallen
add_loot_from_province_effect = { 
	if = {
		limit = {
			FROM = {
				NOT = { development = 18 }
			}
		}
		add_treasury = 115
		add_mil_power = 15
	}
	if = {
		limit = {
			FROM = {
				development = 18
				NOT = { development = 21 }
			}
		}
		add_treasury = 135
		add_mil_power = 15
	}
	if = {
		limit = {
			FROM = {
				development = 21
				NOT = { development = 24 }
			}
		}
		add_treasury = 155
		add_mil_power = 25
	}
	if = {
		limit = {
			FROM = {
				development = 24
				NOT = { development = 27 }
			}
		}
		add_treasury = 180
		add_mil_power = 30
	}
	if = {
		limit = {
			FROM = {
				development = 27
				NOT = { development = 30 }
			}
		}
		add_treasury = 210
		add_mil_power = 40
	}
	if = {
		limit = {
			FROM = {
				development = 30
				NOT = { development = 33 }
			}
		}
		add_treasury = 230
		add_mil_power = 50
	}
	if = {
		limit = {
			FROM = {
				development = 33
			}
		}
		add_treasury = 250
		add_mil_power = 55
	}
}

#Generalized version of the same effect, for use in province scope.
#used where ROOT is a province, ie onaction for provinces fallen
#$LOOTER$ is the scope of the tag performing the Looting (so for instance owner)
add_loot_from_rich_province_general_effect = { 
	add_devastation = 50
	if = {
		limit = {
			NOT = { development = 20 }
		}
		$LOOTER$ = {
			add_treasury = 50
			add_mil_power = 10
		}
	}
	if = {
		limit = {
			development = 20
			NOT = { development = 25 }
		}
		$LOOTER$ = {
			add_treasury = 75
			add_mil_power = 15
		}
	}
	if = {
		limit = {
			development = 25
			NOT = { development = 30 }
		}
		$LOOTER$ = {
			add_treasury = 100
			add_mil_power = 20
		}
	}
	if = {
		limit = {
			development = 30
			NOT = { development = 35 }
		}
		$LOOTER$ = {
			add_treasury = 125
			add_mil_power = 25
		}
	}
	if = {
		limit = {
			development = 35
			NOT = { development = 40 }
		}
		$LOOTER$ = {
			add_treasury = 150
			add_mil_power = 30
		}
	}
	if = {
		limit = {
			development = 40
			NOT = { development = 45 }
		}
		$LOOTER$ = {
			add_treasury = 175
			add_mil_power = 35
		}
	}
	if = {
		limit = {
			development = 45
			NOT = { development = 50 }
		}
		$LOOTER$ = {
			add_treasury = 200
			add_mil_power = 40
		}
	}
	if = {
		limit = {
			development = 50
			NOT = { development = 55 }
		}
		$LOOTER$ = {
			add_treasury = 225
			add_mil_power = 45
		}
	}
	if = {
		limit = {
			development = 55
		}
		$LOOTER$ = {
			add_treasury = 250
			add_mil_power = 50
		}
	}
}

#Religious Schools:
#Country Scope
clear_religious_scholar_modifiers_effect = {
	remove_country_modifier = hanafi_scholar_modifier
	remove_country_modifier = hanbali_scholar_modifier
	remove_country_modifier = maliki_scholar_modifier
	remove_country_modifier = shafii_scholar_modifier
	remove_country_modifier = ismaili_scholar_modifier
	remove_country_modifier = jafari_scholar_modifier
	remove_country_modifier = zaidi_scholar_modifier
	remove_country_modifier = ibadi_scholar_modifier
}

#Move capital along with all that also needs to be done. Used in capital decisions.
#THIS = Province Scope, ROOT = Country Scope
move_capital_effect = {
	if = {
		limit = {
			is_part_of_hre = yes
			ROOT = {
				is_part_of_hre = no
			}
		}
		set_in_empire = no
		emperor = {
			add_opinion = {
				who = ROOT
				modifier = hre_province_left
			}
		}
		add_imperial_influence = -1
	}
	if = {
		limit = { is_capital = no }
		ROOT = {
			set_capital = PREV
		}
	}
}

#Same as move_capital_effect, but for when you want to move PREV's rather than ROOT's capital
#THIS = Province Scope, PREV = Country Scope
prev_move_capital_effect = {
	if = {
		limit = {
			is_part_of_hre = yes
			PREV = {
				is_part_of_hre = no
			}
		}
		set_in_empire = no
		PREV = {
			emperor = {
				add_opinion = {
					who = PREV
					modifier = hre_province_left
				}
			}
		}
		add_imperial_influence = -1
	}
	if = {
		limit = { is_capital = no }
		PREV = {
			set_capital = PREV
		}
	}
}

remove_non_electors_emperors_from_empire_effect = {
	if = {
		limit = {
			is_part_of_hre = yes
			is_elector = no
			is_emperor = no
		}
		custom_tooltip = remove_non_electors_emperors_from_empire_effect_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					is_part_of_hre = yes
				}
				set_in_empire = no
			}
		}
	}
}

abolish_slavery_effect = {
	custom_tooltip = abolished_slavery_act_tooltip
	hidden_effect = {
		every_owned_province = {
			limit = {
				trade_goods = slaves
			}
			change_trade_goods = unknown
			remove_building = tradecompany
		}
	}
}

#Ends the normal Revolution disaster (if you have it) and clears all related modifiers and flags
clear_standard_revolution_elements_effect = {
	if = {
		limit = {
			has_disaster = revolution
		}
		end_disaster = revolution
	}

	clr_country_flag = religious_revolution
	clr_country_flag = serfdom
	clr_country_flag = social_reform
	clr_country_flag = royal_bureaucracy
	clr_country_flag = deplorable_reign
	clr_country_flag = road_to_bankruptcy
	clr_country_flag = financial_crisis
	clr_country_flag = revolutionary_philosopher
	remove_country_modifier = religious_intolerance
	remove_country_modifier = religious_tolerance
	remove_country_modifier = restrict_serfdom
	remove_country_modifier = enforce_serfdom
	remove_country_modifier = suppress_free_thinkers
	remove_country_modifier = bureaucratic_reduction
	remove_country_modifier = bureaucratic_expansion
	remove_country_modifier = support_monarch
	remove_country_modifier = oppose_monarch
	remove_country_modifier = mint_money
	remove_country_modifier = fight_inflation
	remove_country_modifier = disarmament
	remove_country_modifier = financial_disaster
}

enact_revolution_effect = {
	disband_rebels = revolutionary_rebels
	disband_rebels = anti_tax_rebels
	hidden_effect = {
		if = {	
			limit = {
				any_subject_country = {
					has_country_modifier = colony_inspired_by_revolution
				}
			}
			every_subject_country = {
				remove_country_modifier = colony_inspired_by_revolution
			}
		}
		if = {
			limit = {
				OR = {
					has_disaster = french_revolution
					has_country_flag = use_french_disaster_exile_effect
				}
				has_regency = no
			}
			set_country_flag = ruler_of_france_exiled
		}
		if = {
			limit = {
				OR = {
					has_disaster = french_revolution
					has_country_flag = use_french_disaster_exile_effect
				}
				has_heir = yes
			}
			exile_heir_as = heir_of_france
			set_country_flag = heir_of_france_exiled
		}
	}
	if = {
		limit = { is_emperor_of_china = yes }
		dismantle_empire_of_china = yes
		set_global_flag = empire_of_china_dismantled
	}
	if = {
		limit = { NOT = { government = republic } }
		change_government_to_republic = yes
	}
	if = {
		limit = {
			revolution_target_exists = yes
		}
		add_government_reform = junior_revolutionary_republic_reform
	}
	else = {
		add_government_reform = revolutionary_republic_reform
		set_revolution_target = ROOT
	}
	if = {
		limit = { has_reform = parliamentary_reform }
		remove_government_reform = parliamentary_reform
	}
	if = {
		limit = { has_reform = states_general_reform }
		remove_government_reform = states_general_reform
	}
	if = {
		limit = {
			OR = {
				has_disaster = french_revolution
				has_country_flag = use_french_disaster_exile_effect
			}
		}
		hidden_effect = {
			exile_ruler_as = { name = ruler_of_france }
		}
	}
	else = {
		kill_ruler = yes
	}

	add_yearly_manpower = 5

	if = {
		limit = {
			has_country_flag = revolution_disaster_reactionary
		}
		add_country_modifier = {
			name = reactionaries_failed
			duration = 9125
		}
	}

	if = {
		limit = {
			has_country_flag = revolution_disaster_immediate_revolution
		}
		clr_country_flag = revolution_disaster_immediate_revolution
	}
	set_country_flag = revolutionary_republic_flag

	if = {
		limit = {
			tag = FRA
		}
		if = {
			limit = { has_custom_ideas = no }
			country_event = { id = ideagroups.1 } #Swap Ideas
		}
	}
}

#province scope
add_half_industrialization_effect = {
	if = {
		limit = {
			is_institution_enabled = industrialization
			NOT = { industrialization = 100 }
		}
		add_institution_embracement = {
			which = industrialization
			value = 50
		}
	}
}

#province scope
add_quarter_industrialization_effect = {
	if = {
		limit = {
			is_institution_enabled = industrialization
			NOT = { industrialization = 100 }
		}
		add_institution_embracement = {
			which = industrialization
			value = 25
		}
	}
}

#province scope, chooses which random monarch point bonus to give for agendas
choose_random_development_bonus_effect = {
	random_list = {
		1 = { set_province_flag = add_base_tax_flag }
		1 = { set_province_flag = add_base_production_flag }
		1 = { set_province_flag = add_base_manpower_flag }
	}
}

apply_random_development_bonus_bonus_effect = {
	trigger_switch = {
		on_trigger = has_province_flag
		add_base_tax_flag = {
			add_province_modifier = {
				name = encouraged_growth_tax
				duration = 18250
			}
		}
		add_base_production_flag = {
			add_province_modifier = {
				name = encouraged_growth_production
				duration = 18250
			}
		}
		add_base_manpower_flag = {
			add_province_modifier = {
				name = encouraged_growth_manpower
				duration = 18250
			}
		}
	}
	clear_random_development_bonus_flags_effect = yes
}

clear_random_development_bonus_flags_effect = {
	clr_province_flag = add_base_tax_flag
	clr_province_flag = add_base_production_flag
	clr_province_flag = add_base_manpower_flag
}
#province scope, should be used whenever the revolution is removed from a province
remove_revolution_from_province_effect = {
	hidden_effect = { set_revolution_in_province = no }
	custom_tooltip = no_spread_here_for_15_years_tt
	add_province_modifier = {
		name = no_revolution_here_dummy
		duration = 5475
		hidden = yes
	}
}


spawn_small_scaled_rebels = {
	#always specify type
	#specify saved_name = <saved_name> if you want to use one of those
	#specify leader and leader_dynasty if you want to do it that way
	#otherwise state "no_defined_leader = yes"
	if = {
		limit = {
			owner = {
				total_development = 1000
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 500
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 200
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 1.5
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 1.5
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 1.5
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else = {
		[[no_defined_leader]
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 1
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 1
				type = $type$
				leader = $saved_name$
			}
		]
	}
}

spawn_large_scaled_rebels = {
	#always specify type
	#specify saved_name = <saved_name> if you want to use one of those
	#specify leader and leader_dynasty if you want to do it that way
	#otherwise state "no_defined_leader = yes"
	if = {
		limit = {
			owner = {
				total_development = 2000
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 1000
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 500
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 200
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 2.5
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 2.5
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 2.5
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else = {
		[[no_defined_leader]
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $saved_name$
			}
		]
	}
}


#country scope. Currently just applies to the Hansa, if future ones are added, update the flags
#Used in nation formation decisions
restore_country_name_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_country_flag = is_hanseatic_league_flag
			}
			restore_country_name = yes
			clr_country_flag = is_hanseatic_league_flag
		}
	}
}

#Used to clone the nation when forming a colonial tag.
restore_old_nation_on_formation_effect = {
	custom_tooltip = loses_old_world_provs_tt
	hidden_effect = {
		if = {
			limit = {
				NOT = { is_former_colonial_nation = yes }
			}
			every_province = {
				limit = {
					is_core = ROOT
					OR = {
						continent = europe
						continent = asia
						continent = africa
					}
				}
				add_core = event_target:old_tag_target
				remove_core = ROOT
			}
			release = event_target:old_tag_target
			event_target:old_tag_target = { swap_non_generic_missions = yes }
			ROOT = { set_country_flag = old_world_to_new_world_flag }
			ROOT = { set_country_flag = no_colonial_nations }
			every_subject_country = {
				limit = {
					capital_scope = { 
						OR = {
							continent = europe
							continent = asia
							continent = africa
						}
					}
				}
				grant_independence = yes
			}
			every_subject_country = {
				limit = {
					is_subject_of_type = colony
				}
				grant_independence = yes
			}
			if = {
				limit = {
					NOT = { government_rank = 2 }
				}
				event_target:old_tag_target = { set_government_rank = 1 }
			}
			else_if = {
				limit = {
					government_rank = 3
				}
				event_target:old_tag_target = { set_government_rank = 3 }
			}
			if = {
				limit = {
					has_reform = shogunate
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = shogunate
					#set_legacy_government = shogunate_legacy
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = indep_daimyo
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = indep_daimyo
					#set_legacy_government = indep_daimyo_legacy
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = english_monarchy
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = english_monarchy
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = elective_monarchy
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = elective_monarchy
					#set_legacy_government = elective_monarchy_legacy
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = ottoman_government
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = ottoman_government
					#set_legacy_government = ottoman_government_legacy
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = indian_sultanate_reform
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = indian_sultanate_reform
					#set_legacy_government = iqta_legacy
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
				if = {
					limit = {
						has_reform = mughal_government
					}
					event_target:old_tag_target = {
						add_government_reform = mughal_government
					}
				}
			}
			else_if = {
				limit = {
					has_reform = mamluk_government
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = mamluk_government
					#set_legacy_government = mamluk_government_legacy
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = iqta
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = iqta
					#set_legacy_government = iqta_legacy
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = prussian_monarchy
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = prussian_monarchy
					#set_legacy_government = prussian_monarchy_legacy
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = gaelic_overkingdom
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = gaelic_overkingdom
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = french_feudalism
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = french_feudalism
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = french_absolutism
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = french_absolutism
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = chrysanthemum_throne
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = chrysanthemum_throne
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = celestial_kingdom
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = celestial_kingdom
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = warring_state
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = warring_state
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = barbary_state
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = barbary_state
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = timurid_emirate
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = timurid_emirate
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = beylik
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = beylik
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = indian_raj
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = indian_raj
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = siamese_absolutism
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = siamese_absolutism
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = sakdina_system_reform
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = sakdina_system_reform
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = roman_government
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = roman_government
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = negusa_nagast
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = negusa_nagast
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = solomonic_empire
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = solomonic_empire
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = musa_rule
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = musa_rule
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					government = monarchy
				}
				event_target:old_tag_target = {
					change_government = monarchy
					add_government_reform = feudalism_reform
					#set_legacy_government = monarchy
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = venice_merchants_reform
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = venice_merchants_reform
					#set_legacy_government = venetian_merchant_republic
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = veche_republic
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = veche_republic
					#set_legacy_government = veche_republic_legacy
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					government = theocracy
					has_reform = united_cantons_reform
				}
				event_target:old_tag_target = {
					change_government = theocracy
					add_government_reform = united_cantons_reform
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = united_cantons_reform
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = united_cantons_reform
					#set_legacy_government = united_cantons_legacy
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = merchants_reform
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = merchants_reform
					#set_legacy_government = merchant_republic
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = prussian_republic_reform
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = prussian_republic_reform
					#set_legacy_government = prussian_republic
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = signoria_reform
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = signoria_reform
					#set_legacy_government = signoria
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = ambrosian_republic
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = ambrosian_republic
					#set_legacy_government = ambrosian_republic_legacy
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = dutch_republic
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = dutch_republic
					#set_legacy_government = dutch_republic_legacy
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = cossacks_reform
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = cossacks_reform
					#set_legacy_government = cossacks_legacy_reform
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = noble_elite_reform
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = noble_elite_reform
					#set_legacy_government = noble_republic
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = peasants_republic
				}
				event_target:old_tag_target = {
					change_government = republic
					#set_legacy_government = peasants_republic_legacy
					add_government_reform = peasants_republic
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = pirate_republic_reform
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = pirate_republic_reform
					#set_legacy_government = pirate_republic
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					has_reform = kongsi_federation
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = kongsi_federation
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					government = republic
				}
				event_target:old_tag_target = {
					change_government = republic
					add_government_reform = oligarchy_reform
					#set_legacy_government = noble_republic
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					government = theocracy
					has_reform = monastic_order_reform
				}
				event_target:old_tag_target = {
					change_government = theocracy
					add_government_reform = monastic_order_reform
					#set_legacy_government = monastic_order_government
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					government = theocracy
					has_reform = warrior_monks_reform
				}
				event_target:old_tag_target = {
					change_government = theocracy
					add_government_reform = warrior_monks_reform
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					government = theocracy
				}
				event_target:old_tag_target = {
					change_government = theocracy
					add_government_reform = leading_clergy_reform
					#set_legacy_government = theocratic_government
					define_ruler = {
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					government = tribal
					has_reform = steppe_horde
				}
				event_target:old_tag_target = {
					change_government = tribal
					add_government_reform = steppe_horde
					#set_legacy_government = steppe_horde_legacy
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					government = tribal
					has_reform = oghuz_confederation
				}
				event_target:old_tag_target = {
					change_government = tribal
					add_government_reform = oghuz_confederation
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else_if = {
				limit = {
					government = tribal
					has_reform = jurchen_tribe
				}
				event_target:old_tag_target = {
					change_government = tribal
					add_government_reform = jurchen_tribe
					define_ruler = {
						dynasty = ROOT
						claim = 95
					}
				}
			}
			else = {
				event_target:old_tag_target = {
					change_government = tribal
					add_government_reform = tribal_federation
					#set_legacy_government = tribal_democracy_legacy
				}
			}
		}
	}
}

change_government_to_republic = {
	if = {
		limit = {
			NOT = { government = republic }
		}
		change_government = republic
		change_government_reform_progress = -200
	}
}

change_government_to_monarchy = {
	if = {
		limit = {
			NOT = { government = monarchy }
		}
		if = {
			limit = {
				government = republic
			}
			change_government = monarchy
			change_government_reform_progress = -400
		}
		else = {
			change_government = monarchy
			change_government_reform_progress = -200
		}
	}
}

change_government_to_theocracy = {
	if = {
		limit = {
			NOT = { government = theocracy }
		}
		if = {
			limit = {
				government = republic
			}
			change_government = theocracy
			change_government_reform_progress = -400
		}
		else = {
			change_government = theocracy
			change_government_reform_progress = -200
		}
	}
}

change_government_to_tribal = {
	if = {
		limit = {
			NOT = { government = tribal }
		}
		change_government = tribal
		change_government_reform_progress = -800
	}
}

add_ruler_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			religion = totemism 
		}
		add_ruler_personality = ancestor_$key$_personality
	}
	else = {
		add_ruler_personality = $key$_personality
	}
}

add_heir_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			religion = totemism 
		}
		add_heir_personality = ancestor_$key$_personality
	}
	else = {
		add_heir_personality = $key$_personality
	}
}

add_queen_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			religion = totemism 
		}
		add_queen_personality = ancestor_$key$_personality
	}
	else = {
		add_queen_personality = $key$_personality
	}
}

remove_ruler_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			religion = totemism 
		}
		remove_ruler_personality = ancestor_$key$_personality
	}
	else = {
		remove_ruler_personality = $key$_personality
	}
}

remove_heir_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			religion = totemism 
		}
		remove_heir_personality = ancestor_$key$_personality
	}
	else = {
		remove_heir_personality = $key$_personality
	}
}

remove_queen_personality_ancestor = {
	# key = personality to test again
	if = {
		limit = { 
			has_dlc = "Leviathan"
			religion = totemism 
		}
		remove_queen_personality = ancestor_$key$_personality
	}
	else = {
		remove_queen_personality = $key$_personality
	}
}

#The three effects below are used for setting a great project to exact the tier
#I tried to combine the three effects into one single scripted effect, but I couldn't figure a way out to do the effect without having to do a lot of custom tooltip
#Sets monument tier 1 (has no effect if the monument is tier 1 or higher)
#Province scope
set_great_project_tier_0 = {
	if = {
		limit = {
			has_great_project = {	#Asks the EXACT tier unlike other triggers
				type = $type$
				tier = 1
			}
		}
		add_great_project_tier = {
			type = $type$
			tier = -1
		}
	}
}

set_great_project_tier_1 = {
	if = {
		limit = {
			has_great_project = {	#Asks the EXACT tier unlike other triggers
				type = $type$
				tier = 0
			}
		}
		add_great_project_tier = {
			type = $type$
			tier = 1
		}
	}
}

#Province effect
remove_random_development = {
	if = {
		limit = {
			base_tax = 2
			base_production = 2
			base_manpower = 2
		}
		random_list = {
			33 = {
				add_base_tax = -1
			}
			33 = {
				add_base_production = -1
			}
			33 = {
				add_base_manpower = -1
			}
		}
	}
	else_if = {
		limit = {
			base_tax = 2
			base_production = 2
		}
		random_list = {
			50 = {
				add_base_tax = -1
			}
			50 = {
				add_base_production = -1
			}
		}
	}
	else_if = {
		limit = {
			base_tax = 2
			base_manpower = 2
		}
		random_list = {
			50 = {
				add_base_tax = -1
			}
			50 = {
				add_base_manpower = -1
			}
		}
	}
	else_if = {
		limit = {
			base_manpower = 2
			base_production = 2
		}
		random_list = {
			50 = {
				add_base_manpower = -1
			}
			50 = {
				add_base_production = -1
			}
		}
	}
	else_if = {
		limit = {
			base_tax = 2
		}
		add_base_tax = -1
	}
	else_if = {
		limit = {
			base_production = 2
		}
		add_base_production = -1
	}
	else_if = {
		limit = {
			base_manpower = 2
		}
		add_base_manpower = -1
	}
}

#Country effect
add_inflation_scaled_to_trade = {
	[[custom_tooltip] 
		custom_tooltip = $custom_tooltip$
	]
	#custom_tooltip = add_inflation_scaled_to_trade_tt	#Make sure to define an own custom tooltip for telling how much inflation per trade percantage should be given
	hidden_effect = {
		export_to_variable = {
			which = trade_income_variable
			value = trade_income_percentage
		}
		multiply_variable = {
			which = trade_income_variable
			value = 100
		}
		while = {
			limit = {
				check_variable = {
					which = trade_income_variable
					value = 1
				}
			}
			add_inflation = $inflation$
			subtract_variable = {
				which = trade_income_variable
				value = 1
			}
		}
	}
}

#Country "effect"
mal_determine_offer_acceptance = {
	if = {
		limit = {
			mal_will_accept_offer = {
				province = $province$
			}
		}
		$province$ = {
			owner = {
				custom_tooltip = mal_will_accept_offer
			}
		}
	}
	else_if = {
		limit = {
			mal_very_highly_to_accept_offer = {
				province = $province$
			}
		}
		$province$ = {
			owner = {
				custom_tooltip = mal_will_probably_accept_offer
			}
		}
	}
	else_if = {
		limit = {
			mal_might_or_might_not_accept_offer = {
				province = $province$
			}
		}
		$province$ = {
			owner = {
				custom_tooltip = mal_could_accept_offer
			}
		}
	}
	else_if = {
		limit = {
			mal_very_likely_to_not_accept_offer = {
				province = $province$
			}
		}
		$province$ = {
			owner = {
				custom_tooltip = mal_will_probably_not_accept_offer
			}
		}
	}
	else_if = {
		limit = {
			mal_will_never_accept_offer = {
				province = $province$
			}
		}
		$province$ = {
			owner = {
				custom_tooltip = mal_will_naver_accept_offer
			}
		}
	}
	else = {
		$province$ = {
			owner = {
				custom_tooltip = mal_offer_outcome_unkonwn
			}
		}
	}
}

#Country effect
add_legitimacy_equivalent = {
	add_legitimacy = $amount$
	add_horde_unity = $amount$
	add_devotion = $amount$
	add_meritocracy = $amount$
	add_republican_tradition = $republican_tradition$	#This one is special because of how much republics scale with it
}

#Country effect
##########################################################
# Supports following merc companies
# merc_oyo_cavalry
##########################################################
# When adding a new merc company then make sure that a unlock_$merc_company$_tt is defined in the localization
# For checking if a merc company is unlocked already, use has_unlocked_merc_company = { merc_company = $merc_company$ }
unlock_merc_company = {
	custom_tooltip = unlock_$merc_company$_tt
	hidden_effect = {
		set_country_flag = unlocked_$merc_company$
	}
}

#Same as above, but this time it makes a company unavailable
#Does not support any merc company yet
#lock_merc_company = {
#	custom_tooltip = lock_$merc_company$_tt
#	hidden_effect = {
#		clr_country_flag = unlocked_$merc_company$
#	}
#}

#Country effect - make sure to add an own custom tooltip in form of: "Every §Y$religion$§! country will have their opinion of [Root.GetName] increased by §G+50§!."
add_opinion_of_religion = {
	hidden_effect = {
		set_country_flag = has_improve_opinion_flag
		set_country_flag = has_increased_$religion$_opinion
		every_known_country = {
			limit = {
				religion = $religion$
				NOT = {
					has_opinion_modifier = {
						who = ROOT
						modifier = increased_religion_opinion
					}
				}
			}
			add_opinion = {
				who = ROOT
				modifier = increased_religion_opinion
			}
			reverse_add_opinion = {
				who = ROOT
				modifier = increased_religion_opinion
			}
		}
	}
}

#Country effect - Mission reward
allow_baseline_invite_scholar = {
	custom_tooltip = allows_every_time_invite_of_$religious_school$
	hidden_effect = {
		set_country_flag = can_always_invite_$religious_school$
	}
	[[religious_school_modifier]
		tooltip = {
			add_country_modifier = {
				name = $religious_school_modifier$
				duration = -1
			}
		}
	]
}

#Province effect
judaism_on_province_change_religion_or_change_owner_effect = {
	if = {
		limit = {
			OR = {
				religion_group = christian
				religion_group = muslim
			}
			owner = {
				has_church_aspect = jewish_abrahamic_aspect
			}
		}
		add_province_modifier = {
			name = judaism_abrahamic_roots
			duration = -1
		}
	}
	else_if = {
		limit = {
			has_province_modifier = judaism_abrahamic_roots
			OR = {
				AND = {
					NOT = { religion_group = christian }
					NOT = { religion_group = muslim }
				}
				owner = {
					NOT = { has_church_aspect = jewish_abrahamic_aspect}
				}
			}
		}
		remove_province_modifier = judaism_abrahamic_roots
	}
	if = {
		limit = {
			religion = jewish
			owner = {
				has_church_aspect = judaism_communities_aspect
			}
		}
		if = {
			limit = {
				has_owner_accepted_culture = no
				has_owner_culture = no
				owner = { NOT = { culture_group = ROOT } }
			}
			add_province_modifier = {
				name = judaism_community_wrong_culture
				duration = -1
			}
		}
		else_if = {
			limit = {
				owner = {
					culture_group = ROOT
					if = {	#Cultural union
						limit = {
							has_dlc = "Common Sense"
						}
						NOT = { government_rank = 3 }
					}
					else = {
						NOT = { total_development = 1000 }
					}
				}
				has_owner_accepted_culture = no
			}
			add_province_modifier = {
				name = judaism_community_same_culture_group
				duration = -1
			}
		}
	}
	else_if = {
		limit = {
			OR = {
				NOT = { religion = jewish }
				owner = { NOT = { has_church_aspect = judaism_communities_aspect } }
				has_owner_accepted_culture = yes
				has_owner_culture = yes
			}
			OR = {
				has_province_modifier = judaism_community_wrong_culture
				has_province_modifier = judaism_community_same_culture_group
			}
		}
		if = {
			limit = { has_province_modifier = judaism_community_wrong_culture }
			remove_province_modifier = judaism_community_wrong_culture
		}
		if = {
			limit = { has_province_modifier = judaism_community_same_culture_group }
			remove_province_modifier = judaism_community_same_culture_group
		}
	}
}

#Province effect
judaism_on_province_culture_converted_effect = {
	if = {
		limit = {
			religion = jewish
			owner = {
				has_church_aspect = judaism_communities_aspect
			}
		}
		if = {
			limit = {
				has_owner_accepted_culture = no
				has_owner_culture = no
				owner = { NOT = { culture_group = ROOT } }
			}
			add_province_modifier = {
				name = judaism_community_wrong_culture
				duration = -1
			}
		}
		else_if = {
			limit = {
				owner = {
					culture_group = ROOT
					if = {	#Cultural union
						limit = {
							has_dlc = "Common Sense"
						}
						NOT = { government_rank = 3 }
					}
					else = {
						NOT = { total_development = 1000 }
					}
				}
				has_owner_accepted_culture = no
			}
			add_province_modifier = {
				name = judaism_community_same_culture_group
				duration = -1
			}
		}
	}
	else_if = {
		limit = {
			OR = {
				NOT = { religion = jewish }
				owner = { NOT = { has_church_aspect = judaism_communities_aspect } }
				has_owner_accepted_culture = yes
				has_owner_culture = yes
			}
			OR = {
				has_province_modifier = judaism_community_wrong_culture
				has_province_modifier = judaism_community_same_culture_group
			}
		}
		if = {
			limit = { has_province_modifier = judaism_community_wrong_culture }
			remove_province_modifier = judaism_community_wrong_culture
		}
		if = {
			limit = { has_province_modifier = judaism_community_same_culture_group }
			remove_province_modifier = judaism_community_same_culture_group
		}
	}
}

#Country effect
judaism_on_religion_change_effect = {
	every_owned_province = {
		limit = {
			OR = {
				has_province_modifier = judaism_abrahamic_roots
				has_province_modifier = judaism_community_same_culture_group
				has_province_modifier = judaism_community_wrong_culture
			}
		}
		remove_province_modifier = judaism_abrahamic_roots
		remove_province_modifier = judaism_community_same_culture_group
		remove_province_modifier = judaism_community_wrong_culture
	}
}

#Country effect
judaism_on_culture_country_effect = {
	if = {
		limit = {
			has_church_aspect = judaism_communities_aspect
		}
		every_owned_province = {
			remove_province_modifier = judaism_community_wrong_culture
			remove_province_modifier = judaism_community_same_culture_group
		}
		every_owned_province = {
			limit = {
				religion = jewish
			}
			if = {
				limit = {
					NOT = { culture_group = ROOT }
					has_owner_accepted_culture = no
					has_owner_culture = no
				}
				add_province_modifier = {
					name = judaism_community_wrong_culture
					duration = -1
				}
			}
			else_if = {
				limit = {
					owner = {
						has_cultural_union = no
					}
					culture_group = ROOT
					has_owner_accepted_culture = no
				}
				add_province_modifier = {
					name = judaism_community_same_culture_group
					duration = -1
				}
			}
		}
	}
}

#Country effect
#Make sure to make your own custom tooltip for it because parameters can't be given as input. Sadly.
transfer_treasury = {
	#custom_tooltip = transfer_treasury_tt	#Transfer §Y[$giver$.$variable$.GetValue]§! Ducats to $Y[$taker$.GetName]§!.
	hidden_effect = {
		$giver$ = {
			while = {
				limit = {
					check_variable = {
						which = $variable$
						value = 1
					}
				}
				$taker$ = {
					add_treasury = 1
				}
				add_treasury = -1
				subtract_variable = {
					which = $variable$
					value = 1
				}
			}
			multiply_variable = {
				which = $variable$
				value = 100
			}
			while = {
				limit = {
					check_variable = {
						which = $variable$
						value = 1
					}
				}
				$taker$ = {
					add_treasury = 0.01
				}
				add_treasury = -0.01
				subtract_variable = {
					which = $variable$
					value = 1
				}
			}
		}
	}
	[[custom_tooltip]
		custom_tooltip = $custom_tooltip$
	]
}

#Country effect
set_prestige_to_zero = {
	custom_tooltip = set_prestige_to_zero_tt
	hidden_effect = {
		add_prestige = -200
		add_prestige = 100
	}
}

#Country effect
enable_cult_for_heirs = {
	custom_tooltip = enable_cult_for_heirs_tt
	hidden_effect = {
		set_country_flag = enabled_cult_for_heirs
		if = {
			limit = {
				has_heir = yes
			}
			country_event = {
				id = fetishist_flavor.600
			}
		}
	}
}

#Country effect
enable_cult_for_heirs_mission = {
	custom_tooltip = enable_cult_for_heirs_tt
	hidden_effect = {
		if = {
			limit = { has_estate_privilege = estate_church_heir_shrine }
			remove_estate_privilege = estate_church_heir_shrine
		}
		set_country_flag = enabled_cult_for_heirs
		set_country_flag = heir_cult_through_missions
		if = {
			limit = {
				has_heir = yes
			}
			country_event = {
				id = fetishist_flavor.600
			}
		}
	}
}

#Country effect
remove_heir_cult = {
	trigger_switch = {
		on_trigger = has_country_modifier
		junior_yemoja_cult =                   { remove_country_modifier = junior_yemoja_cult }
		junior_roog_cult =                     { remove_country_modifier = junior_roog_cult }
		junior_nyame_cult =                    { remove_country_modifier = junior_nyame_cult }
		junior_cwezi_cult =                    { remove_country_modifier = junior_cwezi_cult }
		junior_central_african_ancestor_cult = { remove_country_modifier = junior_central_african_ancestor_cult }
		junior_mwari_cult =                    { remove_country_modifier = junior_mwari_cult }
		junior_enkai_cult =                    { remove_country_modifier = junior_enkai_cult }
		junior_waaq_cult =                     { remove_country_modifier = junior_waaq_cult }
		junior_zanahary_cult =                 { remove_country_modifier = junior_zanahary_cult }
		junior_christianity_cult =             { remove_country_modifier = junior_christianity_cult }
		junior_islam_cult =                    { remove_country_modifier = junior_islam_cult }
		junior_buddhism_cult =                 { remove_country_modifier = junior_buddhism_cult }
		junior_dharmic_cult =                  { remove_country_modifier = junior_dharmic_cult }
		junior_south_central_american_cult =   { remove_country_modifier = junior_south_central_american_cult }
		junior_norse_cult =                    { remove_country_modifier = junior_norse_cult }
		junior_jewish_cult =                   { remove_country_modifier = junior_jewish_cult }
		junior_zoroastrian_cult =              { remove_country_modifier = junior_zoroastrian_cult }
	}
}

disable_cult_for_heirs = {
	custom_tooltip = disable_cult_for_heirs_tt
	hidden_effect = {
		remove_heir_cult = yes
		clr_country_flag = enabled_cult_for_heirs
	}
}

#Country effect
unlock_cult_through_selection = {
	custom_tooltip = unlock_cult_through_selection_tt
	hidden_effect = {
		country_event = {
			id = fetishist_flavor.601
		}
	}
}

#Province effect
spawn_country_religious_rebels = {
	owner = {
		trigger_switch = {
			on_trigger = religion
			anglican =              { PREV = { spawn_rebels = { type = anglican_rebels size = $size$ } } }
			hussite =               { PREV = { spawn_rebels = { type = hussite_rebels size = $size$ } } }
			animism =               { PREV = { spawn_rebels = { type = animism_rebels size = $size$ } } }
			buddhism =              { PREV = { spawn_rebels = { type = buddhism_rebels size = $size$ } } }
			catholic =              { PREV = { spawn_rebels = { type = catholic_rebels size = $size$ } } }
			confucianism =          { PREV = { spawn_rebels = { type = confucianism_rebels size = $size$ } } }
			coptic =                { PREV = { spawn_rebels = { type = coptic_rebels size = $size$ } } }
			hinduism =              { PREV = { spawn_rebels = { type = hinduism_rebels size = $size$ } } }
			ibadi =                 { PREV = { spawn_rebels = { type = ibadi_rebels size = $size$ } } }
			inti =                  { PREV = { spawn_rebels = { type = inti_rebels size = $size$ } } }
			jewish =                { PREV = { spawn_rebels = { type = jewish_rebels size = $size$ } } }
			mahayana =              { PREV = { spawn_rebels = { type = mahayana_rebels size = $size$ } } }
			mesoamerican_religion = { PREV = { spawn_rebels = { type = maya_rebels size = $size$ } } }
			nahuatl =               { PREV = { spawn_rebels = { type = nahuatl_rebels size = $size$ } } }
			norse_pagan_reformed =  { PREV = { spawn_rebels = { type = norse_pagan_reformed_rebels size = $size$ } } }
			orthodox =              { PREV = { spawn_rebels = { type = orthodox_rebels size = $size$ } } }
			protestant =            { PREV = { spawn_rebels = { type = protestant_rebels size = $size$ } } }
			reformed =              { PREV = { spawn_rebels = { type = reformed_rebels size = $size$ } } }
			shamanism =             { PREV = { spawn_rebels = { type = shamanism_rebels size = $size$ } } }
			shiite =                { PREV = { spawn_rebels = { type = shiite_rebels size = $size$ } } }
			shinto =                { PREV = { spawn_rebels = { type = shinto_rebels size = $size$ } } }
			sikhism =               { PREV = { spawn_rebels = { type = sikhism_rebels size = $size$ } } }
			sunni =                 { PREV = { spawn_rebels = { type = sunni_rebels size = $size$ } } }
			tengri_pagan_reformed = { PREV = { spawn_rebels = { type = tengri_pagan_reformed_rebels size = $size$ } } }
			totemism =              { PREV = { spawn_rebels = { type = totemism_rebels size = $size$ } } }
			vajrayana =             { PREV = { spawn_rebels = { type = vajrayana_rebels size = $size$ } } }
			zoroastrian =           { PREV = { spawn_rebels = { type = zoroastrian_rebels size = $size$ } } }
			nestorian =             { PREV = { spawn_rebels = { type = nestorian_rebels size = $size$ } } }
			bosnian_christian =     { PREV = { spawn_rebels = { type = bosnian_christian_rebels size = $size$ } } }
			mixtec_religion =       { PREV = { spawn_rebels = { type = mixtec_religion_rebels size = $size$ } } }
			purepecha_religion =    { PREV = { spawn_rebels = { type = purepecha_religion_rebels size = $size$ } } }
			zapotec_religion =      { PREV = { spawn_rebels = { type = zapotec_religion_rebels size = $size$ } } }
			yazidi =                { PREV = { spawn_rebels = { type = yazidi_rebels size = $size$ } } }	
			druze =                 { PREV = { spawn_rebels = { type = druze_rebels size = $size$ } } }	
			taoism =                { PREV = { spawn_rebels = { type = taoism_rebels size = $size$ } } }
			catholique =            { PREV = { spawn_rebels = { type = catholique_rebels size = $size$ } } }
		}
	}
}

#Province effect
spawn_province_religious_rebels = {
	trigger_switch = {
		on_trigger = religion
		anglican =              { spawn_rebels = { type = anglican_rebels size = $size$ } }
		hussite =               { spawn_rebels = { type = hussite_rebels size = $size$ } }
		animism =               { spawn_rebels = { type = animism_rebels size = $size$ } }
		buddhism =              { spawn_rebels = { type = buddhism_rebels size = $size$ } }
		catholic =              { spawn_rebels = { type = catholic_rebels size = $size$ } }
		confucianism =          { spawn_rebels = { type = confucianism_rebels size = $size$ } }
		coptic =                { spawn_rebels = { type = coptic_rebels size = $size$ } }
		hinduism =              { spawn_rebels = { type = hinduism_rebels size = $size$ } }
		ibadi =                 { spawn_rebels = { type = ibadi_rebels size = $size$ } }
		inti =                  { spawn_rebels = { type = inti_rebels size = $size$ } }
		jewish =                { spawn_rebels = { type = jewish_rebels size = $size$ } }
		mahayana =              { spawn_rebels = { type = mahayana_rebels size = $size$ } }
		mesoamerican_religion = { spawn_rebels = { type = maya_rebels size = $size$ } }
		nahuatl =               { spawn_rebels = { type = nahuatl_rebels size = $size$ } }
		norse_pagan_reformed =  { spawn_rebels = { type = norse_pagan_reformed_rebels size = $size$ } }
		orthodox =              { spawn_rebels = { type = orthodox_rebels size = $size$ } }
		protestant =            { spawn_rebels = { type = protestant_rebels size = $size$ } }
		reformed =              { spawn_rebels = { type = reformed_rebels size = $size$ } }
		shamanism =             { spawn_rebels = { type = shamanism_rebels size = $size$ } }
		shiite =                { spawn_rebels = { type = shiite_rebels size = $size$ } }
		shinto =                { spawn_rebels = { type = shinto_rebels size = $size$ } }
		sikhism =               { spawn_rebels = { type = sikhism_rebels size = $size$ } }
		sunni =                 { spawn_rebels = { type = sunni_rebels size = $size$ } }
		tengri_pagan_reformed = { spawn_rebels = { type = tengri_pagan_reformed_rebels size = $size$ } }
		totemism =              { spawn_rebels = { type = totemism_rebels size = $size$ } }
		vajrayana =             { spawn_rebels = { type = vajrayana_rebels size = $size$ } }
		zoroastrian =           { spawn_rebels = { type = zoroastrian_rebels size = $size$ } }
		nestorian =             { spawn_rebels = { type = nestorian_rebels size = $size$ } }
		bosnian_christian =     { spawn_rebels = { type = bosnian_christian_rebels size = $size$ } }
		mixtec_religion =       { spawn_rebels = { type = mixtec_religion_rebels size = $size$ } }
		purepecha_religion =    { spawn_rebels = { type = purepecha_religion_rebels size = $size$ } }
		zapotec_religion =      { spawn_rebels = { type = zapotec_religion_rebels size = $size$ } }
		yazidi =                { spawn_rebels = { type = yazidi_rebels size = $size$ } }	
		druze =                 { spawn_rebels = { type = druze_rebels size = $size$ } }		
		taoism =                { spawn_rebels = { type = taoism_rebels size = $size$ } }		
		catholique =            { spawn_rebels = { type = catholique_rebels size = $size$ } }		   
	}
}

#Country effect
enable_cult_switching = {
	custom_tooltip = enable_cult_switching_tt
	hidden_effect = {
		set_country_flag = enabled_cult_switching
	}
}

#Country effect
disable_cult_switching = {
	custom_tooltip = disable_cult_switching_tt
	hidden_effect = {
		clr_country_flag = enabled_cult_switching
	}
}

#Province effect
add_latest_building = {
	[[trade]
		if = {
			limit = { $builder$ = { dip_tech = 22 } }
			add_building = stock_exchange
		}
		else_if = {
			limit = { $builder$ = { dip_tech = 17 } }
			add_building = trade_depot
		}
		else = {
			add_building = marketplace
		}
	]
	[[government]
		if = {
			limit = { $builder$ = { adm_tech = 22 } }
			add_building = town_hall
		}
		else = {
			add_building = courthouse
		}
	]
	[[production]
		if = {
			limit = { $builder$ = { adm_tech = 24 } }
			add_building = counting_house
		}
		else = {
			add_building = workshop
		}
	]
	[[tax]
		if = {
			limit = { $builder$ = { adm_tech = 19 } }
			add_building = cathedral
		}
		else = {
			add_building = temple
		}
	]
	[[manpower]
		if = {
			limit = { $builder$ = { mil_tech = 16 } }
			add_building = training_fields
		}
		else = {
			add_building = barracks
		}
	]
	[[sailors]
		if = {
			limit = { $builder$ = { dip_tech = 19 } }
			add_building = drydock
		}
		else = {
			add_building = dock
		}
	]
	[[army_forcelimit]
		if = {
			limit = { $builder$ = { mil_tech = 22 } }
			add_building = conscription_center
		}
		else = {
			add_building = regimental_camp
		}
	]
	[[navy_forcelimit]
		if = {
			limit = { $builder$ = { dip_tech = 24 } }
			add_building = grand_shipyard
		}
		else = {
			add_building = shipyard
		}
	]
	[[coastal]
		if = {
			limit = { $builder$ = { dip_tech = 12 } }
			add_building = naval_battery
		}
		else = {
			add_building = coastal_defence
		}
	]
	[[fort]
		if = {
			limit = { $builder$ = { mil_tech = 24 } }
			add_building = fort_18th
		}
		else_if = {
			limit = { $builder$ = { mil_tech = 19 } }
			add_building = fort_17th
		}
		else_if = {
			limit = { $builder$ = { mil_tech = 14 } }
			add_building = fort_16th
		}
		else = {
			add_building = fort_15th
		}
	]
}

#Country effect
select_primary_cult = {
	change_cult = $cult$
	custom_tooltip = select_primary_cult_$cult$_tt
	custom_tooltip = tooltip_$cult$
	hidden_effect = {
		set_country_flag = has_$cult$_as_primary_cult
		add_country_modifier = {
			name = primary_$cult$
			duration = -1
		}
		if = {
			limit = { has_country_flag = enabled_cult_for_heirs }
			add_country_modifier = {
				name = junior_$cult$
				duration = -1
				desc = UNTIL_HEIR_SUCCESSION_OR_DEATH
			}
		}
	}
}

#Country effect
clear_previous_primary_cults = {
	hidden_effect = {
		trigger_switch = {
			on_trigger = has_country_flag
			has_yemoja_cult_as_primary_cult = {
				clr_country_flag = has_yemoja_cult_as_primary_cult
				remove_country_modifier = junior_yemoja_cult
				remove_country_modifier = primary_yemoja_cult
			}
			has_roog_cult_as_primary_cult = {
				clr_country_flag = has_roog_cult_as_primary_cult
				remove_country_modifier = junior_roog_cult
				remove_country_modifier = primary_roog_cult
			}
			has_nyame_cult_as_primary_cult = {
				clr_country_flag = has_nyame_cult_as_primary_cult
				remove_country_modifier = junior_nyame_cult
				remove_country_modifier = primary_nyame_cult
			}
			has_cwezi_cult_as_primary_cult = {
				clr_country_flag = has_cwezi_cult_as_primary_cult
				remove_country_modifier = junior_cwezi_cult
				remove_country_modifier = primary_cwezi_cult
			}
			has_central_african_ancestor_cult_as_primary_cult = {
				clr_country_flag = has_central_african_ancestor_cult_as_primary_cult
				remove_country_modifier = junior_central_african_ancestor_cult
				remove_country_modifier = primary_central_african_ancestor_cult
			}
			has_mwari_cult_as_primary_cult = {
				clr_country_flag = has_mwari_cult_as_primary_cult
				remove_country_modifier = junior_mwari_cult
				remove_country_modifier = primary_mwari_cult
			}
			has_enkai_cult_as_primary_cult = {
				clr_country_flag = has_enkai_cult_as_primary_cult
				remove_country_modifier = junior_enkai_cult
				remove_country_modifier = primary_enkai_cult
			}
			has_waaq_cult_as_primary_cult = {
				clr_country_flag = has_waaq_cult_as_primary_cult
				remove_country_modifier = junior_waaq_cult
				remove_country_modifier = primary_waaq_cult
			}
			has_zanahary_cult_as_primary_cult = {
				clr_country_flag = has_zanahary_cult_as_primary_cult
				remove_country_modifier = junior_zanahary_cult
				remove_country_modifier = primary_zanahary_cult
			}
			has_christianity_cult_as_primary_cult = {
				clr_country_flag = has_christianity_cult_as_primary_cult
				remove_country_modifier = junior_christianity_cult
				remove_country_modifier = primary_christianity_cult
			}
			has_islam_cult_as_primary_cult = {
				clr_country_flag = has_islam_cult_as_primary_cult
				remove_country_modifier = junior_islam_cult
				remove_country_modifier = primary_islam_cult
			}
			has_buddhism_cult_as_primary_cult = {
				clr_country_flag = has_buddhism_cult_as_primary_cult
				remove_country_modifier = junior_buddhism_cult
				remove_country_modifier = primary_buddhism_cult
			}
			has_dharmic_cult_as_primary_cult = {
				clr_country_flag = has_dharmic_cult_as_primary_cult
				remove_country_modifier = junior_dharmic_cult
				remove_country_modifier = primary_dharmic_cult
			}
			has_south_central_american_cult_as_primary_cult = {
				clr_country_flag = has_south_central_american_cult_as_primary_cult
				remove_country_modifier = junior_south_central_american_cult
				remove_country_modifier = primary_south_central_american_cult
			}
			has_norse_cult_as_primary_cult = {
				clr_country_flag = has_norse_cult_as_primary_cult
				remove_country_modifier = junior_norse_cult
				remove_country_modifier = primary_norse_cult
			}
			has_jewish_cult_as_primary_cult = {
				clr_country_flag = has_jewish_cult_as_primary_cult
				remove_country_modifier = junior_jewish_cult
				remove_country_modifier = primary_jewish_cult
			}
			has_zoroastrian_cult_as_primary_cult = {
				clr_country_flag = has_zoroastrian_cult_as_primary_cult
				remove_country_modifier = junior_zoroastrian_cult
				remove_country_modifier = primary_zoroastrian_cult
			}
		}
	}
}

#Country effect - Triggers on monarch death - deprecated
clear_primary_cult_bonus = {
	hidden_effect = {
		trigger_switch = {
			on_trigger = has_country_modifier
			primary_yemoja_cult = {
				remove_country_modifier = primary_yemoja_cult
			}
			primary_roog_cult = {
				remove_country_modifier = primary_roog_cult
			}
			primary_nyame_cult = {
				remove_country_modifier = primary_nyame_cult
			}
			primary_cwezi_cult = {
				remove_country_modifier = primary_cwezi_cult
			}
			primary_central_african_ancestor_cult = {
				remove_country_modifier = primary_central_african_ancestor_cult
			}
			primary_mwari_cult = {
				remove_country_modifier = primary_mwari_cult
			}
			primary_enkai_cult = {
				remove_country_modifier = primary_enkai_cult
			}
			primary_waaq_cult = {
				remove_country_modifier = primary_waaq_cult
			}
			primary_zanahary_cult = {
				remove_country_modifier = primary_zanahary_cult
			}
			primary_christianity_cult = {
				remove_country_modifier = primary_christianity_cult
			}
			primary_islam_cult = {
				remove_country_modifier = primary_islam_cult
			}
			primary_buddhism_cult = {
				remove_country_modifier = primary_buddhism_cult
			}
			primary_dharmic_cult = {
				remove_country_modifier = primary_dharmic_cult
			}
			primary_south_central_american_cult = {
				remove_country_modifier = primary_south_central_american_cult
			}
			primary_norse_cult = {
				remove_country_modifier = primary_norse_cult
			}
			primary_jewish_cult = {
				remove_country_modifier = primary_jewish_cult
			}
			primary_zoroastrian_cult = {
				remove_country_modifier = primary_zoroastrian_cult
			}
		}
	}
}

#Country effect
enable_primary_cult = {
	custom_tooltip = enable_primary_cult_tt
	hidden_effect = {
		set_country_flag = uses_primary_cult
		country_event = {
			id = fetishist_flavor.602
		}
	}
}

#Country effect
disable_primary_cult = {
	custom_tooltip = disable_primary_cult_tt
	hidden_effect = {
		clr_country_flag = uses_primary_cult
		clr_country_flag = has_selected_a_primary_cult
		clear_previous_primary_cults = yes
	}
}

#Country effect
disable_scholar_cost = {
	custom_tooltip = disable_scholar_cost_tt
	hidden_effect = {
		set_country_flag = no_scholar_adm_cost
	}
}

#Country effect
enable_scholar_cost = {
	custom_tooltip = enable_scholar_cost_tt
	hidden_effect = {
		clr_country_flag = no_scholar_adm_cost
	}
}

#Country effect - Estate
enable_baseline_invite_scholar = {
	custom_tooltip = enable_baseline_invite_scholar_tt
	hidden_effect = {
		country_event = {
			id = muslim_school_events.24
		}
		set_country_flag = enabled_baseline_invite_scholar
	}
}

allow_baseline_invite_scholar_privilege = {
	custom_tooltip = allows_every_time_invite_of_$religious_school$
	hidden_effect = {
		set_country_flag = privilege_can_always_invite_$religious_school$
	}
	custom_tooltip = allow_baseline_invite_scholar_privilege_tt
	custom_tooltip = $religious_school$_bonus_tt
}

disallow_baseline_invite_scholar = {
	hidden_effect = {
		clr_country_flag = privilege_can_always_invite_hanafi_school
		clr_country_flag = privilege_can_always_invite_hanbali_school
		clr_country_flag = privilege_can_always_invite_maliki_school
		clr_country_flag = privilege_can_always_invite_shafii_school
		clr_country_flag = privilege_can_always_invite_ismaili_school
		clr_country_flag = privilege_can_always_invite_jafari_school
		clr_country_flag = privilege_can_always_invite_zaidi_school
		clr_country_flag = privilege_can_always_invite_ibadi_school
	}
}

disable_baseline_invite_scholar = {
	custom_tooltip = disable_baseline_invite_scholar_tt
	hidden_effect = {
		clr_country_flag = enabled_baseline_invite_scholar
		clr_country_flag = privilege_can_always_invite_hanafi_school
		clr_country_flag = privilege_can_always_invite_hanbali_school
		clr_country_flag = privilege_can_always_invite_maliki_school
		clr_country_flag = privilege_can_always_invite_shafii_school
		clr_country_flag = privilege_can_always_invite_ismaili_school
		clr_country_flag = privilege_can_always_invite_jafari_school
		clr_country_flag = privilege_can_always_invite_zaidi_school
		clr_country_flag = privilege_can_always_invite_ibadi_school
	}
}

#Country effect, event target
select_biggest_country_of_region = {
	if = {
		limit = { any_country = { capital_scope = { region = $region$ } } }
		if = {
			limit = { any_country = { capital_scope = { region = $region$ } total_development = 1000 } }
			random_country = {
				limit = { capital_scope = { region = $region$ } total_development = 1000 }
				save_event_target_as = selected_biggest_country_of_region
			}
		}
		else_if = {
			limit = { any_country = { capital_scope = { region = $region$ } total_development = 900 } }
			random_country = {
				limit = { capital_scope = { region = $region$ } total_development = 900 }
				save_event_target_as = selected_biggest_country_of_region
			}
		}
		else_if = {
			limit = { any_country = { capital_scope = { region = $region$ } total_development = 800 } }
			random_country = {
				limit = { capital_scope = { region = $region$ } total_development = 800 }
				save_event_target_as = selected_biggest_country_of_region
			}
		}
		else_if = {
			limit = { any_country = { capital_scope = { region = $region$ } total_development = 700 } }
			random_country = {
				limit = { capital_scope = { region = $region$ } total_development = 700 }
				save_event_target_as = selected_biggest_country_of_region
			}
		}
		else_if = {
			limit = { any_country = { capital_scope = { region = $region$ } total_development = 600 } }
			random_country = {
				limit = { capital_scope = { region = $region$ } total_development = 600 }
				save_event_target_as = selected_biggest_country_of_region
			}
		}
		else_if = {
			limit = { any_country = { capital_scope = { region = $region$ } total_development = 500 } }
			random_country = {
				limit = { capital_scope = { region = $region$ } total_development = 500 }
				save_event_target_as = selected_biggest_country_of_region
			}
		}
		else_if = {
			limit = { any_country = { capital_scope = { region = $region$ } total_development = 400 } }
			random_country = {
				limit = { capital_scope = { region = $region$ } total_development = 400 }
				save_event_target_as = selected_biggest_country_of_region
			}
		}
		else_if = {
			limit = { any_country = { capital_scope = { region = $region$ } total_development = 300 } }
			random_country = {
				limit = { capital_scope = { region = $region$ } total_development = 300 }
				save_event_target_as = selected_biggest_country_of_region
			}
		}
		else_if = {
			limit = { any_country = { capital_scope = { region = $region$ } total_development = 200 } }
			random_country = {
				limit = { capital_scope = { region = $region$ } total_development = 200 }
				save_event_target_as = selected_biggest_country_of_region
			}
		}
		else_if = {
			limit = { any_country = { capital_scope = { region = $region$ } total_development = 100 } }
			random_country = {
				limit = { capital_scope = { region = $region$ } total_development = 100 }
				save_event_target_as = selected_biggest_country_of_region
			}
		}
		else_if = {
			limit = { any_country = { capital_scope = { region = $region$ } } }
			random_country = { 
				limit = { capital_scope = { region = $region$ } }
				save_event_target_as = selected_biggest_country_of_region
			}
		}
		set_country_flag = mal_visit_foreign_capital
	}
}

#Credits for that script goes to Stiopa
for = {
	[[custom_tooltip]custom_tooltip = $custom_tooltip$]
	hidden_effect = {
		set_variable = {
			which = ForLoopCounter
			value = $amount$
		}	
		while = {
			limit = {
				check_variable = {
					which = ForLoopCounter
					value = 1
				}
			}
			$effect$
			subtract_variable = {
				which = ForLoopCounter
				value = 1
			}
		}
	}
}
#####################
# 	USAGE
# 	pick_best_tags = {
#		global_trigger = "your global triggers here" OPTIONAL
#		<example>
#		global_trigger = "
#		OR = {
#			continent = europe
#			allied_with = ROOT
#		}"
#		scale = your trigger type here REQUIRED
#		<example>
#		scale = army_size
#		<number of tags here> = yes (supported numbers: 1-3) REQUIRED
#		event_target_name = "your name for event target here> REQUIRED
#		scope = "your scope here> OPTIONAL
#		<example>
#		scope = "every_neighbor_country"
#		default is every_country
#	}
#####################

pick_best_tags = {
	[[scope]
		pick_best_tags_2 = {
			scope = $scope$
			scale = $scale$
			event_target_name = $event_target_name$
			global_trigger = "$global_trigger$"
			1 = "$1$"
			2 = "$2$"
			3 = "$3$"
			4 = "$4$"
			5 = "$5$"
			10 = "$10$"
		}
		set_global_flag = PICK_BEST_TAG_FLAG
	] #curses for not having an [ELSE ] or something.
	if = {
		limit = {
			NOT = { has_global_flag = PICK_BEST_TAG_FLAG } #This check is here to prevent the algorithm from being run again after the scoped version was executed
		}
		pick_best_tags_2 = {
			scope = every_country
			scale = $scale$
			event_target_name = $event_target_name$
			global_trigger = "$global_trigger$"
			1 = "$1$"
			2 = "$2$"
			3 = "$3$"
			4 = "$4$"
			5 = "$5$"
			10 = "$10$"
		}
	}
	else = { clr_global_flag = PICK_BEST_TAG_FLAG }
}

pick_best_tags_2 = {
	hidden_effect = {
		[[1]
			if = {
				limit = { always = $1$ }
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 1
				}
			}
		]
		[[2]
			if = {
				limit = { always = $2$ }
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 1
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 2
				}
			}
		]
		[[3]
			if = {
				limit = { always = $3$ }
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 1
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 2
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 3
				}
			}
		]
		[[4]
			if = {
				limit = { always = $4$ }
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 1
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 2
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 3
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 4
				}
			}
		]
		[[5]
			if = {
				limit = { always = $5$ }
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 1
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 2
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 3
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 4
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 5
				}
			}
		]
		[[10]
			if = {
				limit = { always = $10$ }
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 1
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 2
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 3
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 4
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 5
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 6
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 7
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 8
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 9
				}
				pick_best_tag = {
					scale = "$scale$"
					scope = $scope$
					global_trigger = "$global_trigger$"
					event_target_name = "$event_target_name$"
					number = 10
				}
			}
		]
		$scope$ = {
			limit = {
				has_country_flag = $event_target_name$_exclude
			}
			clr_country_flag = $event_target_name$_exclude
		}
	}
}

pick_best_tag = {
	1 = { save_event_target_as = $event_target_name$_$number$ }
	$scope$ = {
		limit = {
			[[global_trigger] $global_trigger$ ]
			$scale$ = event_target:$event_target_name$_$number$
			NOT = { has_country_flag = $event_target_name$_exclude }
		}
		save_event_target_as = $event_target_name$_$number$
	}
	event_target:$event_target_name$_$number$ = {
		set_country_flag = $event_target_name$_exclude
	}
}
